# master
- hosts: k8s-1-*
  become: yes
  become_user: root
  roles:
    - role: gantsign.helm
  pre_tasks:
    # - name: install kubectl
    #   yum:
    #       name: kubectl-{{k8s_version}}
    #       state: present
    #       allow_downgrade: yes
    #  - name: Create a centos user
    #    user:
    #     name: centos
    #     password: "SHA512"
    #     state: present
    #     shell: /bin/bash
    #     system: no
    #     createhome: yes
    #     home: /home/centos
    - name: firewall master 6443
      firewalld:
        port: 6443/tcp
        permanent: yes
        state: enabled
    - name: firewall master 2379-2380
      firewalld:
        port: 2379-2380/tcp
        permanent: yes
        state: enabled
    - name: firewall master 10250-10252
      firewalld:
        port: 10250-10252/tcp
        permanent: yes
        state: enabled
    - name: firewall master 10255
      firewalld:
        port: 10255/tcp
        permanent: yes
        state: enabled
    - name: firewall master 8472
      firewalld:
        port: 8472/udp
        permanent: yes
        state: enabled
    - name: firewall master 30000-32767
      firewalld:
        port: 30000-32767/tcp
        permanent: yes
        state: enabled
    - name: firewall master masquerade
      firewalld:
        masquerade: yes
        state: enabled
        permanent: yes
    - name: restart firewall service
      systemd:
        state: restarted
        daemon_reload: yes
        name: firewalld

    - name: create kubernetes directory
      file:
        path: /etc/kubernetes
        state: directory
        mode: 0755
    - name: create kubernetes log directory
      file:
        path: /var/log/kubernetes/audit
        state: directory
        mode: 0755
    - name: default audit policy
      copy:
        dest: /etc/kubernetes/audit-policy.yaml
        content: |
          apiVersion: audit.k8s.io/v1beta1
          kind: Policy
          rules:
          - level: Metadata

    - name: pull kube images
      command: kubeadm config images pull

    - name: initialize the cluster
      shell: kubeadm init --pod-network-cidr=10.244.0.0/16 >> cluster_initialized.txt
      args:
        chdir: $HOME
        creates: cluster_initialized.txt

    - name: create .kube directory
      become: yes
      become_user: vinnie
      file:
        path: $HOME/.kube
        state: directory
        mode: 0755

    - name: copy admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/vinnie/.kube/config
        remote_src: yes
        owner: vinnie

    - name: install Pod network
      become: yes
      become_user: vinnie
      shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml >> pod_network_setup.txt
      args:
        chdir: $HOME
        creates: pod_network_setup.txt

    - name: tiller account
      become: yes
      become_user: vinnie
      command: kubectl -n kube-system create serviceaccount tiller
    - name: tiller account binding
      become: yes
      become_user: vinnie
      command: kubectl create clusterrolebinding tiller --clusterrole='cluster-admin' --serviceaccount=kube-system:tiller
    - name: get join command
      shell: kubeadm token create --print-join-command
      register: join_command_raw

    - name: set join command
      set_fact:
        join_command: "{{ join_command_raw.stdout_lines[0] }}"

    - name: "Cluster token"
      shell: kubeadm token list | cut -d ' ' -f1 | sed -n '2p'
      register: K8S_TOKEN

    - name: "CA Hash"
      shell: openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'
      register: K8S_MASTER_CA_HASH

    - name: "Add K8S Token and Hash to dummy host"
      add_host:
        name:   "K8S_TOKEN_HOLDER"
        token:  "{{ K8S_TOKEN.stdout }}"
        hash:   "{{ K8S_MASTER_CA_HASH.stdout }}"
        join_command: "{{ join_command }}"
## workers
- hosts: ~k8s-[2:3]-*
  become: yes
  tasks:
    - name: firewall worker 10250
      firewalld:
        port: 10250/tcp
        permanent: yes
        state: enabled
    - name: firewall worker 10255
      firewalld:
        port: 10255/tcp
        permanent: yes
        state: enabled
    - name: firewall worker 8472
      firewalld:
        port: 8472/udp
        permanent: yes
        state: enabled
    - name: firewall worker 30000-32767
      firewalld:
        port: 30000-32767/tcp
        permanent: yes
        state: enabled
    - name: firewall worker masquerade
      firewalld:
        masquerade: yes
        state: enabled
        permanent: yes
    - name: restart firewall service
      systemd:
        state: restarted
        daemon_reload: yes
        name: firewalld
    - name: join cluster
      shell: "{{ hostvars['K8S_TOKEN_HOLDER'].join_command }} --ignore-preflight-errors all  >> node_joined.txt"
      args:
        chdir: $HOME
        creates: node_joined.txt

- hosts: ~k8s-1-*
  become: yes
  become_user: vinnie
  gather_facts: false
  tasks:
    - name: helm init tiller
      command: helm init --service-account tiller --wait
