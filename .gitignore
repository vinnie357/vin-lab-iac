vault.yaml
.env_vars_helper.sh
*.ova
*.ovf
do.json
as3.json
vinlab.vmware.yml
creds.auto.tfvars
controller-installer-2.9.0.tar.gz
creds/gcp/*.json
!creds/gcp/my_example_creds.json
creds/aws/*.json
!creds/aws/my_example_creds.json
creds/azure/*.json
!creds/azure/my_example_creds.json
f5devcentral.atc_deploy
netbox-docker
# pihole
csc/dns/pihole/etc-pihole/*
csc/dns/pihole/etc-dnsmasq.d/*
#https://github.com/github/gitignore/blob/master/Global/Ansible.gitignore
*.retry


#https://github.com/github/gitignore/blob/master/Terraform.gitignore
# lock files
.terraform.lock.hcl
# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log

# Ignore any .tfvars files that are generated automatically for each Terraform run. Most
# .tfvars files are managed as part of configuration and so should be included in
# version control.
#
# example.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*
