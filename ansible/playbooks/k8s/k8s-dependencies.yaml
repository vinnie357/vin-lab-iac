
- hosts: k8s
  become: yes
  tasks:
    - name: stop Docker
      service:
        name: docker
        state: stopped
    - name: Setup daemon
      shell: |
        cat > /etc/docker/daemon.json <<EOF
        {
          "exec-opts": ["native.cgroupdriver=systemd"],
          "log-driver": "json-file",
          "log-opts": {
            "max-size": "100m"
          },
          "storage-driver": "overlay2",
          "storage-opts": [
            "overlay2.override_kernel_check=true"
          ]
        }
        EOF

    - name: start Docker
      service:
        name: docker
        state: started
    
    - name: disable swap
      shell: |
        swapoff -a
        sed -i 's/^\(.*swap.*\)$/#\1/' /etc/fstab  
    
    - name: load netfilter probe specifically
      command: modprobe br_netfilter 

    - name: disable SELinux blocking
      selinux:
        policy: targeted
        state: permissive

    #  - name: disable SELinux on reboot
    #    selinux:
    #      state: disabled

    - name: ensure net.bridge.bridge-nf-call-ip6tables is set to 1
      sysctl:
        name: net.bridge.bridge-nf-call-ip6tables
        value: 1
        state: present

    - name: ensure net.bridge.bridge-nf-call-iptables is set to 1
      sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: 1
        state: present

    - name: add Kubernetes' YUM repository
      yum_repository:
        name: Kubernetes
        description: Kubernetes YUM repository
        enabled: true
        baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
        gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
        gpgcheck: yes
    #sudo yum --enablerepo=Kubernetes clean metadata
    - name: add kube tools
      yum:
        state: present
        update_cache: true
        name: 
          - nfs-utils
          - kubelet-{{k8s_version}}
          - kubeadm-{{k8s_version}}
    - name: add kube tools kubectl
      yum:
        state: present
        name: 
          - kubectl-{{k8s_version}}
          - bash-completion
      when: "'k8s-1-' in inventory_hostname"
    - name: add auto complete to master
      become: yes
      become_user: vinnie
      shell: |
        echo 'source <(kubectl completion bash)' >>~/.bashrc &&
        echo 'alias k=kubectl' >>~/.bashrc &&
        echo 'complete -F __start_kubectl k' >>~/.bashrc
      when: "'k8s-1-' in inventory_hostname"
    - name: start kubelet
      service:
        name: kubelet
        enabled: yes
        state: started